;;; builtins.xtm -- test the builtins

;; Author: Ben Swift
;; Keywords: extempore
;; Required dylibs:

;;; Commentary:

;; Test that all the builtins are there and work properly

;; this test should be called through xtmtest-run-tests

;;; Code:

(xtmtest '(bind-func test_fabsf
            (lambda ()
              (fabsf -6.0)))

         (test_fabsf) 6.0)

(xtmtest '(bind-func test_fabsd
            (lambda ()
              (fabsd -6.0)))

         (test_fabsd) 6.0)

(xtmtest '(bind-func test_fabs
            (lambda ()
              (fabs -6.0)))

         (test_fabs) 6.0)

(xtmtest '(bind-func test_sqrtd
            (lambda ()
              (sqrtd 9.)))

         (test_sqrtd) 3.)

(xtmtest '(bind-func test_sqrtf
            (lambda ()
              (sqrtf 9.)))

         (test_sqrtf) 3.)

(xtmtest '(bind-func test_sqrt
            (lambda ()
              (sqrt 9.)))

         (test_sqrt) 3.)

(xtmtest '(bind-func test_log10d
            (lambda ()
              (log10d 100.)))

         (test_log10d) 2.)

(xtmtest '(bind-func test_log10f
            (lambda ()
              (log10f 100.)))

         (test_log10f) 2.)

(xtmtest '(bind-func test_log10
            (lambda ()
              (log10 100.)))

         (test_log10) 2.)

(xtmtest '(bind-func test_log2d
            (lambda ()
              (log2d 8.)))

         (test_log2d) 3.)

(xtmtest '(bind-func test_log2f
            (lambda ()
              (log2f 8.)))

         (test_log2f) 3.)

(xtmtest '(bind-func test_log2
            (lambda ()
              (log2 8.)))

         (test_log2) 3.)

(xtmtest '(bind-func test_logd
            (lambda ()
              (logd 7.)))

         (test_logd))

(xtmtest '(bind-func test_logf
            (lambda ()
              (logf 7.)))

         (test_logf))

(xtmtest '(bind-func test_log
            (lambda ()
              (log 7.)))

         (test_log))

(xtmtest '(bind-func test_powd
            (lambda ()
              (powd 2. 2.)))

         (test_powd) 4.)

(xtmtest '(bind-func test_powf
            (lambda ()
              (powf 2. 2.)))

         (test_powf) 4.)

(xtmtest '(bind-func test_pow
            (lambda ()
              (pow 2. 2.)))

         (test_pow) 4.)

(xtmtest '(bind-func test_fmodd
            (lambda ()
              (fmodd 10. 3.)))

         (test_fmodd) 1.)

(xtmtest '(bind-func test_fmodf
            (lambda ()
              (fmodf 10. 3.)))

         (test_fmodf) 1.)

(xtmtest '(bind-func test_fmod
            (lambda ()
              (fmod 10. 3.)))

         (test_fmod) 1.)

(xtmtest '(bind-func test_expd
            (lambda ()
              (expd 2.)))

         (test_expd))

(xtmtest '(bind-func test_expf
            (lambda ()
              (expf 2.)))

         (test_expf))

(xtmtest '(bind-func test_exp
            (lambda ()
              (exp 2.)))

         (test_exp))

(xtmtest '(bind-func test_floord
            (lambda ()
              (floord 4.5)))

         (test_floord) 4.)

(xtmtest '(bind-func test_floorf
            (lambda ()
              (floorf 4.5)))

         (test_floorf) 4.)

(xtmtest '(bind-func test_floor
            (lambda ()
              (floor 4.5)))

         (test_floor) 4.)

(xtmtest '(bind-func test_ceild
            (lambda ()
              (ceild 3.7)))

         (test_ceild) 4.)

(xtmtest '(bind-func test_ceilf
            (lambda ()
              (ceilf 3.7)))

         (test_ceilf) 4.)

(xtmtest '(bind-func test_ceil
            (lambda ()
              (ceil 3.7)))

         (test_ceil) 4.)

(xtmtest '(bind-func test_atan2d
            (lambda ()
              (atan2d 3.0 .2)))

         (test_atan2d))

(xtmtest '(bind-func test_atan2f
            (lambda ()
              (atan2f 3.0 .2)))

         (test_atan2f))

(xtmtest '(bind-func test_atan2
            (lambda ()
              (atan2 3.0 .2)))

         (test_atan2))

(xtmtest '(bind-func test_atand
            (lambda ()
              (atand 3.)))

         (test_atand))

(xtmtest '(bind-func test_atanf
            (lambda ()
              (atanf 3.)))

         (test_atanf))

(xtmtest '(bind-func test_atan
            (lambda ()
              (atan 3.)))

         (test_atan))

(xtmtest '(bind-func test_asind
            (lambda ()
              (asind 0.)))

         (test_asind) 0.)

(xtmtest '(bind-func test_asinf
            (lambda ()
              (asinf 0.)))

         (test_asinf) 0.)

(xtmtest '(bind-func test_asin
            (lambda ()
              (asin 0.)))

         (test_asin) 0.)

(xtmtest '(bind-func test_acosd
            (lambda ()
              (acosd 0.)))

         (test_acosd))

(xtmtest '(bind-func test_acosf
            (lambda ()
              (acosf 0.)))

         (test_acosf))

(xtmtest '(bind-func test_acos
            (lambda ()
              (acos 0.)))

         (test_acos))

(xtmtest '(bind-func test_sinhd
            (lambda ()
              (sinhd 0.)))

         (test_sinhd) 0.)

(xtmtest '(bind-func test_sinhf
            (lambda ()
              (sinhf 0.)))

         (test_sinhf) 0.)

(xtmtest '(bind-func test_sinh
            (lambda ()
              (sinh 0.)))

         (test_sinh) 0.)

(xtmtest '(bind-func test_tanhd
            (lambda ()
              (tanhd 0.)))

         (test_tanhd) 0.)

(xtmtest '(bind-func test_tanhf
            (lambda ()
              (tanhf 0.)))

         (test_tanhf) 0.)

(xtmtest '(bind-func test_tanh
            (lambda ()
              (tanh 0.)))

         (test_tanh) 0.)

(xtmtest '(bind-func test_coshd
            (lambda ()
              (coshd 0.)))

         (test_coshd) 1.)

(xtmtest '(bind-func test_coshf
            (lambda ()
              (coshf 0.)))

         (test_coshf) 1.)

(xtmtest '(bind-func test_cosh
            (lambda ()
              (cosh 0.)))

         (test_cosh) 1.)

(xtmtest '(bind-func test_sind
            (lambda ()
              (sind 0.)))

         (test_sind) 0.)

(xtmtest '(bind-func test_sinf
            (lambda ()
              (sinf 0.)))

         (test_sinf) 0.)

(xtmtest '(bind-func test_sin
            (lambda ()
              (sin 0.)))

         (test_sin) 0.)

(xtmtest '(bind-func test_tand
            (lambda ()
              (tand 0.)))

         (test_tand) 0.)

(xtmtest '(bind-func test_tanf
            (lambda ()
              (tanf 0.)))

         (test_tanf) 0.)

(xtmtest '(bind-func test_tan
            (lambda ()
              (tan 0.)))

         (test_tan) 0.)

(xtmtest '(bind-func test_cosd
            (lambda ()
              (cosd 0.)))

         (test_cosd) 1.)

(xtmtest '(bind-func test_cosf
            (lambda ()
              (cosf 0.)))

         (test_cosf) 1.)

(xtmtest '(bind-func test_cos
            (lambda ()
              (cos 0.)))

         (test_cos) 1.)

(xtmtest '(bind-func test_mutex
  (lambda ()
    (let ((mutex (mutex_create)))
      (mutex_lock mutex)
      (mutex_trylock mutex) ; this is allowed to spuriously fail, would that affect this test?
      (mutex_unlock mutex)
      (mutex_unlock mutex)
      (mutex_destroy mutex))))
  (test_mutex))

;; (xtmtest '(bind-func test_thread_sleep
;;   (lambda ()
;;     (thread_sleep))))

;;  (test-xtfunc test_thread_sleep)

;; (xtmtest '(bind-func test_thread_self
;;   (lambda ()
;;     (thread_self))))

;;  (test-xtfunc test_thread_self)

;; (xtmtest '(bind-func test_thread_kill
;;   (lambda ()
;;     (thread_kill))))

;;  (test-xtfunc test_thread_kill)

;; (xtmtest '(bind-func test_thread_join
;;   (lambda ()
;;     (thread_join))))

;;  (test-xtfunc test_thread_join)

;; (xtmtest '(bind-func test_thread_fork
;;   (lambda ()
;;     (thread_fork))))

;;  (test-xtfunc test_thread_fork)

;; (xtmtest '(bind-func test_list_ref
;;   (lambda ()
;;     (list_ref))))

;;  (test-xtfunc test_list_ref)

;; (xtmtest '(bind-func test_free16
;;   (lambda ()
;;     (free16))))

;;  (test-xtfunc test_free16)

;; (xtmtest '(bind-func test_malloc16
;;   (lambda ()
;;     (malloc16))))

;;  (test-xtfunc test_malloc16)

(xtmtest '(bind-func test_is_cptr_or_str
            (lambda ()
              (is_cptr_or_str "string")))

         (test_is_cptr_or_str) 0)

(xtmtest '(bind-func test_is_cptr
            (lambda ()
              (let ((p:i8* (salloc)))
                (is_cptr p))))

         (test_is_cptr) 0)

;; (xtmtest '(bind-func test_mk_cptr
;;   (lambda ()
;;     (mk_cptr))))

;;  (test-xtfunc test_mk_cptr)

;; (xtmtest '(bind-func test_cptr_value
;;   (lambda ()
;;     (cptr_value))))

;;  (test-xtfunc test_cptr_value)

(xtmtest '(bind-func test_is_string
            (lambda ()
              (is_string "soifns")))

         (test_is_string) 0)

;; (xtmtest '(bind-func test_mk_string
;;   (lambda ()
;;     (mk_string))))

;;  (test-xtfunc test_mk_string)

;; (xtmtest '(bind-func test_string_value
;;   (lambda ()
;;     (string_value))))

;;  (test-xtfunc test_string_value)

;; (xtmtest '(bind-func test_is_integer
;;   (lambda ()
;;     (is_integer))))

;;  (test-xtfunc test_is_integer)

;; (xtmtest '(bind-func test_mk_i1
;;   (lambda ()
;;     (mk_i1))))

;;  (test-xtfunc test_mk_i1)

;; (xtmtest '(bind-func test_i1value
;;   (lambda ()
;;     (i1value))))

;;  (test-xtfunc test_i1value)

;; (xtmtest '(bind-func test_mk_i8
;;   (lambda ()
;;     (mk_i8))))

;;  (test-xtfunc test_mk_i8)

;; (xtmtest '(bind-func test_i8value
;;   (lambda ()
;;     (i8value))))

;;  (test-xtfunc test_i8value)

;; (xtmtest '(bind-func test_mk_i16
;;   (lambda ()
;;     (mk_i16))))

;;  (test-xtfunc test_mk_i16)

;; (xtmtest '(bind-func test_i16value
;;   (lambda ()
;;     (i16value))))

;;  (test-xtfunc test_i16value)

;; (xtmtest '(bind-func test_mk_i32
;;   (lambda ()
;;     (mk_i32))))

;;  (test-xtfunc test_mk_i32)

;; (xtmtest '(bind-func test_i32value
;;   (lambda ()
;;     (i32value))))

;;  (test-xtfunc test_i32value)

;; (xtmtest '(bind-func test_mk_i64
;;   (lambda ()
;;     (mk_i64))))

;;  (test-xtfunc test_mk_i64)

;; (xtmtest '(bind-func test_i64value
;;   (lambda ()
;;     (i64value))))

;;  (test-xtfunc test_i64value)

;; (xtmtest '(bind-func test_is_real
;;   (lambda ()
;;     (is_real))))

;;  (test-xtfunc test_is_real)

;; (xtmtest '(bind-func test_mk_float
;;   (lambda ()
;;     (mk_float))))

;;  (test-xtfunc test_mk_float)

;; (xtmtest '(bind-func test_r32value
;;   (lambda ()
;;     (r32value))))

;;  (test-xtfunc test_r32value)

;; (xtmtest '(bind-func test_mk_double
;;   (lambda ()
;;     (mk_double))))

;;  (test-xtfunc test_mk_double)

;; (xtmtest '(bind-func test_r64value
;;   (lambda ()
;;     (r64value))))

;;  (test-xtfunc test_r64value)

;; (xtmtest '(bind-func test_cname_decode
;;   (lambda ()
;;     (cname_decode))))

;;  (test-xtfunc test_cname_decode)

;; (xtmtest '(bind-func test_cname_encode
;;   (lambda ()
;;     (cname_encode))))

;;  (test-xtfunc test_cname_encode)

;; (xtmtest '(bind-func test_base64_decode
;;   (lambda ()
;;     (base64_decode))))

;;  (test-xtfunc test_base64_decode)

;; (xtmtest '(bind-func test_base64_encode
;;   (lambda ()
;;     (base64_encode))))

;;  (test-xtfunc test_base64_encode)

;; (xtmtest '(bind-func test_rreplace
;;   (lambda ()
;;     (rreplace))))

;;  (test-xtfunc test_rreplace)

;; (xtmtest '(bind-func test_rmatch
;;   (lambda ()
;;     (rmatch))))

;;  (test-xtfunc test_rmatch)

;; (xtmtest '(bind-func test_rsplit
;;   (lambda ()
;;     (rsplit))))

;;  (test-xtfunc test_rsplit)

(xtmtest '(bind-func test_imp_rand2_f
            (lambda ()
              (< (imp_rand2_f 0. 10.) 10.)))

         (test_imp_rand2_f) 1)

(xtmtest '(bind-func test_imp_rand1_f
            (lambda ()
              (< (imp_rand1_f 10.) 10.)))

         (test_imp_rand1_f) 1)

(xtmtest '(bind-func test_imp_rand2_d
            (lambda ()
              (< (imp_rand2_d 0. 10.) 10.)))

         (test_imp_rand2_d) 1)

(xtmtest '(bind-func test_imp_rand1_d
            (lambda ()
              (< (imp_rand1_d 10.) 10.)))

         (test_imp_rand1_d) 1)

(xtmtest '(bind-func test_imp_rand2_i32
            (lambda ()
              (< (imp_rand2_i32 0 10) 10)))

         (test_imp_rand2_i32) 1)

(xtmtest '(bind-func test_imp_rand1_i32
            (lambda ()
              (< (imp_rand1_i32 10) 10)))

         (test_imp_rand1_i32) 1)

(xtmtest '(bind-func test_imp_rand2_i64
            (lambda ()
              (< (imp_rand2_i64 0 10) 10)))

         (test_imp_rand2_i64) 1)

(xtmtest '(bind-func test_imp_rand1_i64
            (lambda ()
              (< (imp_rand1_i64 10) 10)))

         (test_imp_rand1_i64) 1)

(xtmtest '(bind-func test_imp_randf
            (lambda ()
              (and (> (imp_randf) .0)
                   (< (imp_randf) 1.0))))

         (test_imp_randf) 1)

(xtmtest '(bind-func test_imp_randd
            (lambda ()
              (and (> (imp_randd) 0.)
                   (< (imp_randd) 1.))))

         (test_imp_randd) 1)

(xtmtest '(bind-func test_unswap32f
            (lambda ()
              (unswap32f 10)))

         (test_unswap32f))

(xtmtest '(bind-func test_unswap32i
            (lambda ()
              (unswap32i 10)))

         (test_unswap32i))

(xtmtest '(bind-func test_unswap64f
            (lambda ()
              (unswap64f 10)))

         (test_unswap64f))

(xtmtest '(bind-func test_unswap64i
            (lambda ()
              (unswap64i 10)))

         (test_unswap64i))

(xtmtest '(bind-func test_swap32f
            (lambda ()
              (swap32f 10.)))

         (test_swap32f))

(xtmtest '(bind-func test_swap32i
            (lambda ()
              (swap32i 10)))

         (test_swap32i))

(xtmtest '(bind-func test_swap64f
            (lambda ()
              (swap64f 10.)))

         (test_swap64f))

(xtmtest '(bind-func test_swap64i
            (lambda ()
              (swap64i 10)))

         (test_swap64i))

(xtmtest '(bind-func test_string_hash
            (lambda ()
              (string_hash "test")))

         (test_string_hash))

(xtmtest '(bind-func test_extitoa
            (lambda ()
              (extitoa 40)))

         (test_extitoa))

(xtmtest '(bind-func test_llvm_memset
            (lambda ()
              (llvm_memset null 10 0)))

         (test_llvm_memset))

(xtmtest '(bind-func test_llvm_zone_ptr_size
            (lambda ()
              (llvm_zone_ptr_size null)))

         (test_llvm_zone_ptr_size) 0)

(xtmtest '(bind-func test_llvm_zone_ptr_set_size
            (lambda ()
              (llvm_zone_ptr_set_size null 0)))

         (test_llvm_zone_ptr_set_size))

;; (xtmtest '(bind-func test_llvm_zone_mark_size
;;   (lambda ()
;;     (llvm_zone_mark_size null))))

;;  (test-xtfunc (test_llvm_zone_mark_size))

;; (xtmtest '(bind-func test_llvm_zone_mark
;;   (lambda ()
;;     (llvm_zone_mark))))

;;  (test-xtfunc test_llvm_zone_mark)

;; (xtmtest '(bind-func test_llvm_zone_copy_ptr
;;   (lambda ()
;;     (llvm_zone_copy_ptr))))

;;  (test-xtfunc test_llvm_zone_copy_ptr)

;; (xtmtest '(bind-func test_llvm_zone_reset
;;   (lambda ()
;;     (llvm_zone_reset))))

;;  (test-xtfunc test_llvm_zone_reset)

(xtmtest '(bind-func test_llvm_now
            (lambda ()
              (= (llvm_now) (now))))

         (test_llvm_now))

(xtmtest '(bind-func test_ascii_text_color
            (lambda ()
              (ascii_text_color 0 7 0)))

         (test_ascii_text_color))

(xtmtest '(bind-func test_llvm_print_f64
            (lambda ()
              (llvm_print_f64 130.)))

         (test_llvm_print_f64))

(xtmtest '(bind-func test_llvm_print_f32
            (lambda ()
              (llvm_print_f32 1.3)))

         (test_llvm_print_f32))

(xtmtest '(bind-func test_llvm_print_i64
            (lambda ()
              (llvm_print_i64 190)))

         (test_llvm_print_i64))

(xtmtest '(bind-func test_llvm_print_i32
            (lambda ()
              (llvm_print_i32 2342)))

         (test_llvm_print_i32))

(xtmtest '(bind-func test_llvm_print_pointer
            (lambda ()
              (let ((p:i8* (salloc)))
                (llvm_print_pointer p))))

         (test_llvm_print_pointer))

(xtmtest '(bind-func test_new_address_table
            (lambda ()
              (new_address_table)))

         (test_new_address_table))

;; (xtmtest '(bind-func test_add_address_table
;;   (lambda ()
;;     (add_address_table))))

;;  (test-xtfunc test_add_address_table)

(xtmtest '(bind-func test_get_address_offset
            (lambda ()
              (get_address_offset "name" null)))

         (test_get_address_offset))

(xtmtest '(bind-func test_check_address_exists
            (lambda ()
              (check_address_exists "name" null)))

         (test_check_address_exists))

(xtmtest '(bind-func test_check_address_type
            (lambda ()
              (check_address_type "name" null "type")))

         (test_check_address_type))

(xtmtest '(bind-func test_get_address_table
            (lambda ()
              (get_address_table "name" null)))

         (test_get_address_table))

;; (xtmtest '(bind-func test_llvm_zone_malloc
;;   (lambda ()
;;     (llvm_zone_malloc null 0))))

;;  (test-xtfunc (test_llvm_zone_malloc))

;; (xtmtest '(bind-func test_llvm_stack_alloc
;;   (lambda ()
;;     (llvm_stack_alloc))))

;;  (test-xtfunc test_llvm_stack_alloc)

;; (xtmtest '(bind-func test_llvm_push_zone_stack
;;   (lambda ()
;;     (llvm_push_zone_stack))))

;;  (test-xtfunc test_llvm_push_zone_stack)

;; (xtmtest '(bind-func test_llvm_pop_zone_stack
;;   (lambda ()
;;     (llvm_pop_zone_stack))))

;;  (test-xtfunc test_llvm_pop_zone_stack)

;; (xtmtest '(bind-func test_llvm_peek_zone_stack
;;   (lambda ()
;;     (llvm_peek_zone_stack))))

;;  (test-xtfunc test_llvm_peek_zone_stack)

;; (xtmtest '(bind-func test_llvm_scheme_process_ucontext
;;   (lambda ()
;;     (llvm_scheme_process_ucontext))))

;;  (test-xtfunc test_llvm_scheme_process_ucontext)

;; (xtmtest '(bind-func test_llvm_make_ucontext
;;   (lambda ()
;;     (llvm_make_ucontext))))

;;  (test-xtfunc test_llvm_make_ucontext)

;; (xtmtest '(bind-func test_llvm_get_function_ptr
;;   (lambda ()
;;     (llvm_get_function_ptr))))

;;  (test-xtfunc test_llvm_get_function_ptr)

;; (xtmtest '(bind-func test_llvm_schedule_callback
;;   (lambda ()
;;     (llvm_schedule_callback))))

;;  (test-xtfunc test_llvm_schedule_callback)

;; (xtmtest '(bind-func test_llvm_send_udp
;;   (lambda ()
;;     (llvm_send_udp))))

;;  (test-xtfunc test_llvm_send_udp)

;; (xtmtest '(bind-func test_llvm_runtime_error
;;   (lambda ()
;;     (llvm_runtime_error))))

;;  (test-xtfunc test_llvm_runtime_error)

;; (xtmtest '(bind-func test_llvm_zone_print
;;   (lambda ()
;;     (llvm_zone_print))))

;;  (test-xtfunc test_llvm_zone_print)

;; (xtmtest '(bind-func test_llvm_zone_destroy
;;   (lambda ()
;;     (llvm_zone_destroy))))

;;  (test-xtfunc test_llvm_zone_destroy)

;; (xtmtest '(bind-func test_llvm_zone_create
;;   (lambda ()
;;     (llvm_zone_create))))

;;  (test-xtfunc test_llvm_zone_create)

;; (xtmtest '(bind-func test_llvm_fscanf
;;   (lambda ()
;;     (llvm_fscanf))))

;;  (test-xtfunc test_llvm_fscanf)

;; (xtmtest '(bind-func test_llvm_sscanf
;;   (lambda ()
;;     (llvm_sscanf))))

;;  (test-xtfunc test_llvm_sscanf)

(xtmtest '(bind-func test_llvm_sprintf
            (lambda ()
              (let ((str:i8* (salloc 256)))
                (llvm_sprintf str "%lld %s %g\n" 4 "test" 54.)
                (printf "%s" str)
                void)))

         (test_llvm_sprintf))

;; (xtmtest '(bind-func test_llvm_fprintf
;;   (lambda ()
;;     (llvm_fprintf))))

;;  (test-xtfunc test_llvm_fprintf)

(xtmtest '(bind-func test_llvm_printf
            (lambda ()
              (llvm_printf "%lld %s %g\n" 4 "test" 54.)))

         (test_llvm_printf))

(xtmtest '(bind-func test_next_prime
            (lambda ()
              (next_prime 10)))

         (test_next_prime) 11)

;; (xtmtest '(bind-func test_llvm_destroy_zone_after_delay
;;   (lambda ()
;;     (llvm_destroy_zone_after_delay))))

;;  (test-xtfunc test_llvm_destroy_zone_after_delay)

;; (xtmtest '(bind-func test_free_after_delay
;;   (lambda ()
;;     (free_after_delay))))

;;  (test-xtfunc test_free_after_delay)

;; (xtmtest-print-results)
