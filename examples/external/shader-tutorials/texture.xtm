(sys:load "libs/external/glfw3.xtm")

(bind-val width i32 800)
(bind-val height i32 600)

(bind-val window GLFWwindow*
  (begin
    (glfwSetErrorCallback (convert (get_native_fptr glfw_error_callback)))
    (glfw_init_and_create_interaction_window width height)))

(sys:load "libs/external/gl/gl-objects.xtm")

(bind-val texture_data float* 32) ;; 4x2 RGBA

(bind-val tex Texture)
(bind-val vao VAO* (VAO_create_ss_quad))
(bind-val sp ShaderProgram)

(bind-func texture_setup
  (lambda (tex)
    (glActiveTexture GL_TEXTURE0)
    (glBindTexture GL_TEXTURE_2D tex)
    (glTexImage2D GL_TEXTURE_2D
                  0
                  GL_RED
                  4 2 ;; texture is 4x2 float
                  0
                  GL_RED
                  GL_FLOAT
                  (convert texture_data))
    (glTexParameteri GL_TEXTURE_2D GL_TEXTURE_WRAP_S GL_CLAMP_TO_EDGE)
    (glTexParameteri GL_TEXTURE_2D GL_TEXTURE_WRAP_T GL_CLAMP_TO_EDGE)
    (glTexParameteri GL_TEXTURE_2D GL_TEXTURE_MIN_FILTER GL_NEAREST)
    (glTexParameteri GL_TEXTURE_2D GL_TEXTURE_MAG_FILTER GL_NEAREST)
    (gl_print_error "in texture_setup")))

(bind-func create_texture_shader
  (lambda (vsource:i8* fsource:i8*)
    (set! sp (ShaderProgram_create vsource fsource))))

(create_texture_shader (sys:slurp-file "examples/external/shader-tutorials/texture.vert")
                       (sys:slurp-file "examples/external/shader-tutorials/texture.frag"))

;; simple (blocky) gradient
(call-as-xtlang
 (doloop (i 8)
   (pset! texture_data i (/ (convert i) 8.))))

;; init
(call-as-xtlang
 (set! tex (Texture_create))
 (texture_setup tex)
 void)

(bind-func gl_draw
  (lambda ()
    (glClear GL_COLOR_BUFFER_BIT)
    ;; draw the world
    (let ((texloc (glGetUniformLocation sp "tex")))
      (glUseProgram sp)
      (glUniform1i texloc 0))
    (VAO_bind_and_draw_arrays vao GL_TRIANGLE_STRIP 0 4)
    (glfwSwapBuffers window)
    void))

;; run once
(gl_draw)

;; ok, let's use a more sophisticated (image) texture

(call-as-xtlang
 (Texture_delete tex)
 (set! tex (Texture_bind_image (Texture_create) "assets/images/image.png"))
 (if (< tex 0)
     (println "Whoops - tex is < 0")))

;; run it again
(gl_draw)
