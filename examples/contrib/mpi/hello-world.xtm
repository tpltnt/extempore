;;; hello-world.xtm -- simple MPI example

;; Author: Ben Swift
;; Keywords: extempore
;; Required dylibs: libmpi

;;; Commentary:

;; This is an xtlang translation of the "hello world" example from
;; http://mpitutorial.com/tutorials/mpi-hello-world/

;;; Code:

(sys:load "libs/contrib/mpi.xtm")

(bind-lib libmpi MPI_Get_processor_name [i32,i8*,i32*]*)

(bind-func main
  (lambda ()
    ;; Initialize the MPI environment. The two arguments to MPI Init are not
    ;; currently used by MPI implementations, but are there in case future
    ;; implementations might need the arguments.
    (MPI_Init null null)

    ;; Get the number of processes
    (letz ((world_size_ptr:i32* (zalloc))
           (world_rank_ptr:i32* (zalloc))
           (processor_name:i8* (zalloc OPAL_MAX_PROCESSOR_NAME))
           (processor_name_len:i32* (zalloc)))
      (MPI_Comm_size MPI_COMM_WORLD world_size_ptr)
      (MPI_Comm_rank MPI_COMM_WORLD world_rank_ptr)
      (MPI_Get_processor_name processor_name processor_name_len)

      ;; Print off a hello world message
      (printf "Hello world from processor %s, rank %d out of %d processors\n"
              processor_name (pref world_rank_ptr 0) (pref world_size_ptr 0)))

    ;; Finalize the MPI environment. No more MPI calls can be made after this
    (MPI_Finalize)))

(main)
