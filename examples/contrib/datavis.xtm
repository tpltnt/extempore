;;; datavis.xtm:examples --

;; Author: Ben Swift
;; Keywords: extempore
;; Required dylibs: libglfw3, libnanovg

;;; Commentary:

;;

;;; Code:


;; setup GLFW3 and nanovg
(sys:load "libs/external/glfw3.xtm")
(bind-val width  i32 800)
(bind-val height i32 600)
(bind-val window GLFWwindow*
  (glfw_init_and_create_interaction_window (convert width) (convert height)))
(sys:load "libs/external/nanovg.xtm")
(bind-val vg NVGcontext* (nvg_create_context))
(bind-val pixel_ratio float (glfw_get_pixel_ratio window))
(sys:load "libs/external/datavis.xtm")
(call-as-xtlang
 (nvgCreateFont vg "default" "/Library/Fonts/Arial.ttf")
 (nvgFontFace vg "default"))

(dv_draw_axis_labels_2D.font_size 18)

(bind-func draw_barplot
  (let ((nlabs 5)
        (labs:float* (zalloc nlabs))
        (bars:float* (zalloc nlabs))
        (line:float* (zalloc (* 2 nlabs)))
        (i 0))
    (dotimes (i nlabs)
      (pset! labs i (* (convert i) (/ 1. (convert (- nlabs 1)))))
      ;; x positions should be in the middle of the bars
      (pset! line (* i 2) (+ (/ .5 (convert nlabs)) (* (convert i) (/ 1. (convert nlabs))))))
    (lambda (bounds:Rect*)
      (dotimes (i nlabs)
        (pset! bars i (+ .5 (* .3 (cos (* 0.00001 (convert (* (now) (+ i 1))))))))
        (pset! line (+ (* i 2) 1) (+ .5 (* .3 (cos (* 0.00001 (convert (* (now) (+ i 1)))))))))
      (dv_draw_bars vg bounds bars nlabs)
      (dv_draw_axis_labels_2D vg bounds labs nlabs labs nlabs)
      (dv_draw_axes_2D vg bounds)
      (dv_draw_title vg bounds "Barplot")
      (dv_draw_line vg bounds line nlabs)
      void)))

(bind-func draw_scatterplot
  (let ((npoints 50)
        (points:float* (zalloc (* 2 npoints)))
        (i 0))
    (lambda (bounds:Rect*)
      (dotimes (i npoints)
        (pset! points (* i 2) (+ (* (cos (* .00000064 (convert (* i 2 (now))))) .5) .5))
        ;; (pset! points (+ 1 (* i 2)) (/ (convert i) (convert npoints)))
        (pset! points (+ 1 (* i 2)) (+ .5 (% (* 3.2 (cos (* 0.0000003 (convert (* (now) i) float)))) .5))))
      (dv_draw_scatter_points vg bounds points npoints (+ (* (cos (* .0000053 (convert (now)))) 3.) 5.))
      ;; (dv_draw_axis_labels_2D vg bounds points npoints points npoints)
      (dv_draw_axes_2D vg bounds)
      (dv_draw_title vg bounds "Scatterplot")
      void)))

(bind-func nvg_draw_loop
  (let ((bar_rect (Rect 0. 0. (* 0.5 (convert width)) (convert height)))
        (scatter_rect (Rect (* 0.5 (convert width)) 0. (* 0.5 (convert width)) (convert height))))
    (lambda (time:i64 delta_t:double)
      (nvg_clear)
      (nvgBeginFrame vg width height pixel_ratio)
      (nvgResetTransform vg)
      (draw_barplot bar_rect)
      (draw_scatterplot scatter_rect)
      (nvgEndFrame vg)
      (glfwPollEvents)
      (glfwSwapBuffers window)
      (let ((next_time (+ time (convert (* 44100. delta_t)))))
        (callback next_time nvg_draw_loop next_time delta_t)))))

(nvg_draw_loop (now) (/ 1. 30.))
