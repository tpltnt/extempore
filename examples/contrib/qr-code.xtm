;;; examples/qr-code.xtm -- a QR code genration example

;; Author: Ben Swift
;; Keywords: extempore
;; Required dylibs: libqrencode

;;; Commentary:

;; For instructions on how to get libqrencode, see libs/external/qr-code.xtm

;;; Code:

(sys:load "libs/external/graphics-pipeline.xtm")
(sys:load "libs/external/qr-code.xtm")

;; create a function to generate a qr code and print it as ascii-art

(bind-func qr_code_print
  (lambda (input_string)
    (let ((code (qr_create (String input_string) 4))
          (size (QRcode_size code))
          (i 0)
          (j 0))
      (printf "\ninput_string: %s\n\n" input_string)
      (dotimes (i size)
        (dotimes (j size)
          (if (QRcode_pixel code i j)
              (printf "*")
              (printf " ")))
        (printf "\n"))
      (QRcode_free code)
      (printf "\n\n")
      void)))

;; test it out - use whatever string you like!
(qr_code_print "http://benswift.me")

;; now let's draw the qr code graphically

;; change these whatever dimensions you want
(define width 800.0)
(define height width) ;; qr codes are square, so height == width
(bind-val width float width)
(bind-val height float height)
(define fullscreen #f) ;; #t for fullscreen

;; notice how the version (complexity) parameter in qr_create is
;; random, so you'll get a different complexity QR code each time you
;; re-evaluate
(bind-func post:XTMRENDERCB
  (let ((code (qr_create (String "http://benswift.me") (random 10:i32)))
        (size (QRcode_size code))
        (dim (/ height (convert size)))
        (i 0) (j 0)
        ;; path & color setup
        (fill_color:xtm_color* (alloc))
        (clear_color:xtm_color* (alloc)))
    (afill! clear_color 0. 0. 0. 1.)
    (lambda (frame shader m v p data)
      (let ((path (xtm_create_path))
            (fill (vgCreatePaint)))
        (xtm_vg_reset_matrices)
        (xtm_vg_clear (convert width) (convert height) clear_color)
        ;; mess with the fill/stroke parameters to change colours
        ;; loop over the QR code data, adding a rects to the path
        (dotimes (i size)
          (dotimes (j size)
            (if (QRcode_pixel code i j)
                (let ((v (+ .5 (* .5 (cos (* STWOPI 0.1 (/ (convert frame) 10.)))))))
                  (afill! fill_color
                          (% (+ v 0.1) 1.)
                          (% (+ v 0.7) 1.)
                          (% (+ v 0.2) 1.)
                          1.)
                  (xtm_paint_set_fill fill fill_color)
                  (xtm_add_rect path
                                (+ (/ (- width height) 2.)
                                   (* (convert i) dim))
                                (* (convert j) dim)
                                dim dim)))))
        ;; draw the path
        (xtm_fill_path path)
        ;; clean up
        (xtm_destroy_paint fill)
        (xtm_vg_print_error))
      void)))

(bind-func gl_render
  (lambda ()
    ;;          pre  opaq trans post data
    (xtm_render null null null  post null)
    void))

;; start the graphics loop (which calls gl_render) on the utility process
(ipc:graphics-setup "utility" width height fullscreen 10 (*metro* 'get-beat 4) #t)
