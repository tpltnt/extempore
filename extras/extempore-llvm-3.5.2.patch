--- lib/AsmParser/LLParser.cpp	2015-07-11 20:30:36.000000000 +1000
+++ lib/AsmParser/LLParser.cpp	2015-09-14 09:20:57.000000000 +1000
@@ -1803,8 +1803,14 @@
     // If the type hasn't been defined yet, create a forward definition and
     // remember where that forward def'n was seen (in case it never is defined).
     if (!Entry.first) {
-      Entry.first = StructType::create(Context, Lex.getStrVal());
-      Entry.second = Lex.getLoc();
+      // this here for extempore
+      if (M->getTypeByName(Lex.getStrVal())) {
+        Entry.first = M->getTypeByName(Lex.getStrVal());
+        Entry.second = SMLoc();
+      } else {
+        Entry.first = StructType::create(Context, Lex.getStrVal());
+        Entry.second = Lex.getLoc();
+      }
     }
     Result = Entry.first;
     Lex.Lex();

--- lib/ExecutionEngine/MCJIT/MCJIT.cpp	2015-07-31 02:31:16.000000000 +1000
+++ lib/ExecutionEngine/MCJIT/MCJIT.cpp	2015-09-14 09:21:28.000000000 +1000
@@ -483,6 +483,17 @@
         rv.IntVal = APInt(32, PF(ArgValues[0].IntVal.getZExtValue()));
         return rv;
       }
+      if (FTy->getNumParams() == 1 &&
+          RetTy->isVoidTy() &&
+          FTy->getParamType(0)->isPointerTy()) {
+        GenericValue rv;
+        //void (*PF)(char *) = (void(*)(char *))(intptr_t)FPtr;
+        //printf("are symbols available: %d\n",isSymbolSearchingDisabled());
+        void (*PF)(char *) = (void(*)(char *))FPtr;
+        char* mzone = (char*) GVTOP(ArgValues[0]);
+        PF(mzone);
+        return rv;
+      }      
       break;
     }
   }
